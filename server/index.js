import{DurableObject as e}from"cloudflare:workers";import t from"crypto";const r={rateLimit:(e=>{let{max:t}=e;if(!(Number.isInteger(t)&&t>0))throw new TypeError("`max` must be a positive integer");let r=0,n=0,s=0,o=[];const{onEviction:i}=e,a=new Map,l=new Array(t).fill(void 0),u=new Array(t).fill(void 0),c=new Array(t).fill(0),f=new Array(t).fill(0),h=(e,t)=>{if(e===s)return;const r=c[e],o=f[e];e===n?n=r:"get"!==t&&0===o||(c[o]=r),0!==r&&(f[r]=o),c[s]=e,f[e]=s,c[e]=0,s=e},g=()=>{const e=n,t=l[e];return null==i||i(t,u[e]),a.delete(t),l[e]=void 0,u[e]=void 0,n=c[e],0!==n&&(f[n]=0),r--,0===r&&(n=s=0),o.push(e),e};return{set(e,c){if(void 0===e)return;let f=a.get(e);void 0===f?(f=r===t?g():o.length>0?o.pop():r,a.set(e,f),l[f]=e,r++):null==i||i(e,u[f]),u[f]=c,1===r?n=s=f:h(f,"set")},get(e){const t=a.get(e);if(void 0!==t)return t!==s&&h(t,"get"),u[t]},peek:e=>{const t=a.get(e);return void 0!==t?u[t]:void 0},has:e=>a.has(e),*keys(){let e=s;for(let t=0;t<r;t++)yield l[e],e=f[e]},*values(){let e=s;for(let t=0;t<r;t++)yield u[e],e=f[e]},*entries(){let e=s;for(let t=0;t<r;t++)yield[l[e],u[e]],e=f[e]},forEach:e=>{let t=s;for(let n=0;n<r;n++){const r=l[t];e(u[t],r),t=f[t]}},delete(e){const t=a.get(e);if(void 0===t)return!1;null==i||i(e,u[t]),a.delete(e),o.push(t),l[t]=void 0,u[t]=void 0;const h=f[t],g=c[t];return 0!==h&&(c[h]=g),0!==g&&(f[g]=h),t===n&&(n=g),t===s&&(s=h),r--,!0},evict:e=>{let t=Math.min(e,r);for(;t>0;)g(),t--},clear(){if("function"==typeof i){const e=a.values();for(let t=e.next();!t.done;t=e.next())i(l[t.value],u[t.value])}a.clear(),l.fill(void 0),u.fill(void 0),o=[],r=0,n=s=0},resize:e=>{if(!(Number.isInteger(e)&&e>0))throw new TypeError("`max` must be a positive integer");if(e!==t){if(e<t){let t=s;const h=Math.min(r,e),g=r-h,p=new Array(e),d=new Array(e),m=new Array(e),y=new Array(e);for(let e=1;e<=g;e++)null==i||i(l[e],u[e]);for(let e=h-1;e>=0;e--)p[e]=l[t],d[e]=u[t],m[e]=e+1,y[e]=e-1,a.set(p[e],e),t=f[t];n=0,s=h-1,r=h,l.length=e,u.length=e,c.length=e,f.length=e;for(let e=0;e<h;e++)l[e]=p[e],u[e]=d[e],c[e]=m[e],f[e]=y[e];o=[];for(let t=h;t<e;t++)o.push(t)}else{const r=e-t;l.push(...new Array(r).fill(void 0)),u.push(...new Array(r).fill(void 0)),c.push(...new Array(r).fill(0)),f.push(...new Array(r).fill(0))}t=e}},get max(){return t},get size(){return r},get available(){return t-r}}})({max:1e3})},n=10,s=1e4,o=1e4,i=e=>{const t=Date.now(),i=(e=>{const t=e.headers.get("CF-Connecting-IP")||e.headers.get("X-Forwarded-For")||"UNKNOWN";return String(t).slice(0,19)})(e),a=r.rateLimit.get(i);if(a?.blocked&&t<a.resetAt)return{available:!1,remaining:0,resetAt:a.resetAt};if(!a||t-a.timestamp>=s)return r.rateLimit.set(i,{count:1,timestamp:t,blocked:!1}),{available:!0,remaining:n-1};const l=a.count+1;if(l>n){const e=t+o;return r.rateLimit.set(i,{count:l,timestamp:a.timestamp,blocked:!0,resetAt:e}),{available:!1,remaining:0,resetAt:e}}return r.rateLimit.set(i,{...a,count:l}),{available:!0,remaining:n-l}},a=t=>class extends e{ctx;env;sql;stubName;constructor(e,r){super(e,r),this.ctx=e,this.env=r,this.stubName=t,this.sql=e.storage.sql,this.sql.exec(`CREATE TABLE IF NOT EXISTS \`${this.stubName}\`(\`id\` INTEGER PRIMARY KEY, \`slug\` VARCHAR(64) UNIQUE NOT NULL, \`views\` INTEGER DEFAULT 0);`)}async get(e){const t=`SELECT \`views\` FROM \`${this.stubName}\` WHERE slug = ?`,r=this.sql.exec(t,e).toArray();return Number(r[0]?.views)||0}async exists(e){const t=`SELECT 1 FROM \`${this.stubName}\` WHERE \`slug\` = ? LIMIT 1`;return this.sql.exec(t,e).toArray().length>0}async increment(e){try{const t=`UPDATE \`${this.stubName}\` SET \`views\` = \`views\` + 1 WHERE \`slug\` = ?`;return this.sql.exec(t,e),this.get(e)}catch{return 0}}async create(e){const t=`INSERT INTO \`${this.stubName}\` (\`slug\`, \`views\`) VALUES (?, 0)`;try{return this.sql.exec(t,e),!0}catch{return!1}}async set(e,t){const r=`INSERT INTO \`${this.stubName}\` (\`slug\`, \`views\`) VALUES (?, ?) ON CONFLICT(\`slug\`) DO UPDATE SET \`views\` = \`excluded\`.\`views\``;this.sql.exec(r,e,t)}async backup(){const e=(new Date).toISOString().replace(/[:.]/g,"-"),t=`${this.stubName}_${e}.sql`,r=this.sql.exec(`SELECT \`sql\` FROM \`sqlite_master\` WHERE \`type\`='table' AND name='${this.stubName}'`).toArray(),n=this.sql.exec(`SELECT * FROM \`${this.stubName}\` ORDER BY \`id\` ASC`).toArray();let s="-- Counter Database Backup\n";if(s+=`-- Generated at: ${(new Date).toISOString()}\n`,s+=`-- Filename: ${t}\n\n`,r.length>0&&(s+="-- Table structure\n",s+=`${r[0].sql};\n\n`),n.length>0){s+="-- Table data\n",s+=`INSERT INTO \`${this.stubName}\` (\`id\`, \`slug\`, \`views\`) VALUES\n`;s+=`${n.map(e=>`(${e.id}, '${String(e.slug)}', ${e.views})`).join(",\n")};\n\n`}else s+="-- No data to backup\n\n";return s+="-- End of backup\n",{filename:t,dump:(new TextEncoder).encode(s)}}};var l=null;function u(e,r){if("number"!=typeof(e=e||E))throw Error("Illegal arguments: "+typeof e+", "+typeof r);e<4?e=4:e>31&&(e=31);var n=[];return n.push("$2b$"),e<10&&n.push("0"),n.push(e.toString()),n.push("$"),n.push(v(function(e){try{return crypto.getRandomValues(new Uint8Array(e))}catch{}try{return t.randomBytes(e)}catch{}if(!l)throw Error("Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative");return l(e)}(b),b)),n.join("")}function c(e,t,r){if("function"==typeof t&&(r=t,t=void 0),"function"==typeof e&&(r=e,e=void 0),void 0===e)e=E;else if("number"!=typeof e)throw Error("illegal arguments: "+typeof e);function n(t){p(function(){try{t(null,u(e))}catch(e){t(e)}})}if(!r)return new Promise(function(e,t){n(function(r,n){r?t(r):e(n)})});if("function"!=typeof r)throw Error("Illegal callback: "+typeof r);n(r)}function f(e,t){if(void 0===t&&(t=E),"number"==typeof t&&(t=u(t)),"string"!=typeof e||"string"!=typeof t)throw Error("Illegal arguments: "+typeof e+", "+typeof t);return k(e,t)}function h(e,t,r,n){function s(r){"string"==typeof e&&"number"==typeof t?c(t,function(t,s){k(e,s,r,n)}):"string"==typeof e&&"string"==typeof t?k(e,t,r,n):p(r.bind(this,Error("Illegal arguments: "+typeof e+", "+typeof t)))}if(!r)return new Promise(function(e,t){s(function(r,n){r?t(r):e(n)})});if("function"!=typeof r)throw Error("Illegal callback: "+typeof r);s(r)}function g(e,t){for(var r=e.length^t.length,n=0;n<e.length;++n)r|=e.charCodeAt(n)^t.charCodeAt(n);return 0===r}var p="undefined"!=typeof process&&process&&"function"==typeof process.nextTick?"function"==typeof setImmediate?setImmediate:process.nextTick:setTimeout;function d(e){for(var t=0,r=0,n=0;n<e.length;++n)(r=e.charCodeAt(n))<128?t+=1:r<2048?t+=2:55296==(64512&r)&&56320==(64512&e.charCodeAt(n+1))?(++n,t+=4):t+=3;return t}var m="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),y=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1];function v(e,t){var r,n,s=0,o=[];if(t<=0||t>e.length)throw Error("Illegal len: "+t);for(;s<t;){if(r=255&e[s++],o.push(m[r>>2&63]),r=(3&r)<<4,s>=t){o.push(m[63&r]);break}if(r|=(n=255&e[s++])>>4&15,o.push(m[63&r]),r=(15&n)<<2,s>=t){o.push(m[63&r]);break}r|=(n=255&e[s++])>>6&3,o.push(m[63&r]),o.push(m[63&n])}return o.join("")}function w(e,t){var r,n,s,o,i,a=0,l=e.length,u=0,c=[];if(t<=0)throw Error("Illegal len: "+t);for(;a<l-1&&u<t&&(r=(i=e.charCodeAt(a++))<y.length?y[i]:-1,n=(i=e.charCodeAt(a++))<y.length?y[i]:-1,-1!=r&&-1!=n)&&(o=r<<2>>>0,o|=(48&n)>>4,c.push(String.fromCharCode(o)),!(++u>=t||a>=l))&&-1!=(s=(i=e.charCodeAt(a++))<y.length?y[i]:-1)&&(o=(15&n)<<4>>>0,o|=(60&s)>>2,c.push(String.fromCharCode(o)),!(++u>=t||a>=l));)o=(3&s)<<6>>>0,o|=(i=e.charCodeAt(a++))<y.length?y[i]:-1,c.push(String.fromCharCode(o)),++u;var f=[];for(a=0;a<u;a++)f.push(c[a].charCodeAt(0));return f}var b=16,E=10,A=16,I=100,N=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],S=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],T=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892];function C(e,t,r,n){var s,o=e[t],i=e[t+1];return s=n[(o^=r[0])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[1])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[2])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[3])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[4])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[5])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[6])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[7])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[8])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[9])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[10])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[11])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[12])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[13])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],s=n[(o^=(s+=n[768|255&i])^r[14])>>>24],s+=n[256|o>>16&255],s^=n[512|o>>8&255],s=n[(i^=(s+=n[768|255&o])^r[15])>>>24],s+=n[256|i>>16&255],s^=n[512|i>>8&255],o^=(s+=n[768|255&i])^r[16],e[t]=i^r[A+1],e[t+1]=o,e}function R(e,t){for(var r=0,n=0;r<4;++r)n=n<<8|255&e[t],t=(t+1)%e.length;return{key:n,offp:t}}function O(e,t,r){for(var n,s=0,o=[0,0],i=t.length,a=r.length,l=0;l<i;l++)s=(n=R(e,s)).offp,t[l]=t[l]^n.key;for(l=0;l<i;l+=2)o=C(o,0,t,r),t[l]=o[0],t[l+1]=o[1];for(l=0;l<a;l+=2)o=C(o,0,t,r),r[l]=o[0],r[l+1]=o[1]}function x(e,t,r,n,s){var o,i=T.slice(),a=i.length;if(r<4||r>31){if(o=Error("Illegal number of rounds (4-31): "+r),n)return void p(n.bind(this,o));throw o}if(t.length!==b){if(o=Error("Illegal salt length: "+t.length+" != "+b),n)return void p(n.bind(this,o));throw o}r=1<<r>>>0;var l,u,c,f=0;function h(){if(s&&s(f/r),!(f<r)){for(f=0;f<64;f++)for(c=0;c<a>>1;c++)C(i,c<<1,l,u);var o=[];for(f=0;f<a;f++)o.push((i[f]>>24&255)>>>0),o.push((i[f]>>16&255)>>>0),o.push((i[f]>>8&255)>>>0),o.push((255&i[f])>>>0);return n?void n(null,o):o}for(var g=Date.now();f<r&&(f+=1,O(e,l,u),O(t,l,u),!(Date.now()-g>I)););n&&p(h)}if("function"==typeof Int32Array?(l=new Int32Array(N),u=new Int32Array(S)):(l=N.slice(),u=S.slice()),function(e,t,r,n){for(var s,o=0,i=[0,0],a=r.length,l=n.length,u=0;u<a;u++)o=(s=R(t,o)).offp,r[u]=r[u]^s.key;for(o=0,u=0;u<a;u+=2)o=(s=R(e,o)).offp,i[0]^=s.key,o=(s=R(e,o)).offp,i[1]^=s.key,i=C(i,0,r,n),r[u]=i[0],r[u+1]=i[1];for(u=0;u<l;u+=2)o=(s=R(e,o)).offp,i[0]^=s.key,o=(s=R(e,o)).offp,i[1]^=s.key,i=C(i,0,r,n),n[u]=i[0],n[u+1]=i[1]}(t,e,l,u),void 0!==n)h();else for(var g;;)if(void 0!==(g=h()))return g||[]}function k(e,t,r,n){var s,o,i;if("string"!=typeof e||"string"!=typeof t){if(s=Error("Invalid string / salt: Not a string"),r)return void p(r.bind(this,s));throw s}if("$"!==t.charAt(0)||"2"!==t.charAt(1)){if(s=Error("Invalid salt version: "+t.substring(0,2)),r)return void p(r.bind(this,s));throw s}if("$"===t.charAt(2))o=String.fromCharCode(0),i=3;else{if("a"!==(o=t.charAt(2))&&"b"!==o&&"y"!==o||"$"!==t.charAt(3)){if(s=Error("Invalid salt revision: "+t.substring(2,4)),r)return void p(r.bind(this,s));throw s}i=4}if(t.charAt(i+2)>"$"){if(s=Error("Missing salt rounds"),r)return void p(r.bind(this,s));throw s}var a=10*parseInt(t.substring(i,i+1),10)+parseInt(t.substring(i+1,i+2),10),l=t.substring(i+3,i+25),u=function(e){for(var t,r,n=0,s=new Array(d(e)),o=0,i=e.length;o<i;++o)(t=e.charCodeAt(o))<128?s[n++]=t:t<2048?(s[n++]=t>>6|192,s[n++]=63&t|128):55296==(64512&t)&&56320==(64512&(r=e.charCodeAt(o+1)))?(t=65536+((1023&t)<<10)+(1023&r),++o,s[n++]=t>>18|240,s[n++]=t>>12&63|128,s[n++]=t>>6&63|128,s[n++]=63&t|128):(s[n++]=t>>12|224,s[n++]=t>>6&63|128,s[n++]=63&t|128);return s}(e+=o>="a"?"\0":""),c=w(l,b);function f(e){var t=[];return t.push("$2"),o>="a"&&t.push(o),t.push("$"),a<10&&t.push("0"),t.push(a.toString()),t.push("$"),t.push(v(c,c.length)),t.push(v(e,4*T.length-1)),t.join("")}if(void 0===r)return f(x(u,c,a));x(u,c,a,function(e,t){e?r(e,null):r(null,f(t))},n)}var $={setRandomFallback:function(e){l=e},genSaltSync:u,genSalt:c,hashSync:f,hash:h,compareSync:function(e,t){if("string"!=typeof e||"string"!=typeof t)throw Error("Illegal arguments: "+typeof e+", "+typeof t);return 60===t.length&&g(f(e,t.substring(0,t.length-31)),t)},compare:function(e,t,r,n){function s(r){"string"==typeof e&&"string"==typeof t?60===t.length?h(e,t.substring(0,29),function(e,n){e?r(e):r(null,g(n,t))},n):p(r.bind(this,null,!1)):p(r.bind(this,Error("Illegal arguments: "+typeof e+", "+typeof t)))}if(!r)return new Promise(function(e,t){s(function(r,n){r?t(r):e(n)})});if("function"!=typeof r)throw Error("Illegal callback: "+typeof r);s(r)},getRounds:function(e){if("string"!=typeof e)throw Error("Illegal arguments: "+typeof e);return parseInt(e.split("$")[2],10)},getSalt:function(e){if("string"!=typeof e)throw Error("Illegal arguments: "+typeof e);if(60!==e.length)throw Error("Illegal hash length: "+e.length+" != 60");return e.substring(0,29)},truncates:function(e){if("string"!=typeof e)throw Error("Illegal arguments: "+typeof e);return d(e)>72},encodeBase64:function(e,t){return v(e,t)},decodeBase64:function(e,t){return w(e,t)}};const q=e=>{const t=e.headers.get("Authorization");return t?.startsWith("Bearer ")?t.slice(7):e.headers.get("X-API-Key")},L=async(e,t)=>{if(!e||!t)return!1;const r=await $.genSalt(10),n=await $.hash(e,r);return $.compare(t,n)},D=e=>e.normalize("NFD").trim().toLocaleLowerCase().replace(/[^a-z0-9-]/g,""),F=(e="countty")=>({worker:{async fetch(t,r){const s=i(t),o="production"===r.ENVIRONMENT,a=Object.freeze({"Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Content-Type","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Max-Age":"1800","Content-Type":"application/json; charset=utf-8","X-RateLimit-Limit":String(n),"X-RateLimit-Remaining":String(s.remaining),"X-Content-Type-Options":"nosniff","X-Frame-Options":"DENY"}),l=(e,t=200)=>new Response(JSON.stringify(e),{status:t,headers:a});if(!s.available)return l({message:"Request limit exceeded. Please try again later."},429);try{const n=new URL(t.url),s=r.counter.idFromName(e),o=r.counter.get(s),i={request:t,env:r,stub:o,headers:a,response:l};if("OPTIONS"===t.method)return new Response(null,{status:204,headers:a});switch(n.pathname){case"/views":return(async e=>{const{request:t,stub:r,response:n}=e,s=await t.text(),{slug:o}=JSON.parse(s);if("string"!=typeof o)return n({message:"Slug parameter is required [1]."},400);const i=D(o);return 0===i.length?n({message:"Slug parameter is required [2]."},400):n({views:await r.increment(i)})})(i);case"/create":return(async e=>{const{request:t,env:r,stub:n,response:s}=e,o=q(t);if(!await L(r.TOKEN,o))return s({message:"Unauthorized."},401);const i=await t.text(),{slug:a}=JSON.parse(i);if("string"!=typeof a)return s({message:"Slug parameter is required [1]."},400);const l=D(a);return 0===l.length?s({message:"Slug parameter is required [2]."},400):await n.exists(l)?s({message:"Slug already exists."},200):(await n.create(l),s({message:"Slug created successfully."}))})(i);case"/backup":return(async e=>{const{request:t,env:r,stub:n,response:s,headers:o}=e,{filename:i,dump:a}=await n.backup(),l=q(t);return await L(r.TOKEN,l)?new Response((new TextDecoder).decode(a),{status:200,headers:{...o,"Content-Type":"application/sql; charset=utf-8","Content-Disposition":`attachment; filename="${i}"`}}):s({message:"Unauthorized."},401)})(i);default:return l({message:"Not found."},404)}}catch(e){return o||console.error(e),l({message:"Oops! Internal error."},500)}}},Counter:a(e)});export{F as createCountty};
